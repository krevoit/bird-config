protocol device {
	scan time 10;
}

include "./local.conf";

define TRANSIT_ASNS = [ 174,                  # Cogent
                        209,                  # Qwest (HE carries this on IXPs IPv6 (Jul 12 2018))
                        701,                  # UUNET
                        702,                  # UUNET
                        1239,                 # Sprint
                        1299,                 # Telia
                        2914,                 # NTT Communications
                        3257,                 # GTT Backbone
                        3320,                 # Deutsche Telekom AG (DTAG)
                        3356,                 # Level3
                        3549,                 # Level3
                        3561,                 # Savvis / CenturyLink
                        4134,                 # Chinanet
                        5511,                 # Orange opentransit
                        6453,                 # Tata Communications
                        6461,                 # Zayo Bandwidth
                        6762,                 # Seabone / Telecom Italia
                        7018 ];               # AT&T

protocol kernel {
	scan time 20;
#	persist;
	import none;
	export filter {
		if source = RTS_STATIC then reject;
		krt_prefsrc = OWNIP;
		accept;
	};
}

protocol static {
	import all;
	export none;
}

protocol direct {
	interface "lo";
}

include "./filter.conf";

filter ixp_in {
        reject_bogon_asns();
        reject_bogon_prefixes();
        reject_long_aspaths();
#        reject_transit_paths();
        reject_small_prefixes();
#        reject_default_route();
#        honor_graceful_shutdown();
        accept;
}

function upstream_import_filter(int local_pref) {
        reject_bogon_asns();
        reject_bogon_prefixes();
        reject_long_aspaths();
        reject_small_prefixes();
        reject_default_route();
	if ( bgp_path ~ [15623] ) then {
#		print "Reject: Cyberlink in AS path (rp_filter)", net, " ", bgp_path;
		reject;
	}
#        honor_graceful_shutdown();
	if !is_self_net() then {
#		if ( bgp_path ~ [6939] ) then bgp_local_pref = local_pref - 15; 		# Hurriacne Electric
		if ( bgp_path ~ TRANSIT_ASNS ) then bgp_local_pref = local_pref - 10;	# Tier1
		else bgp_local_pref = local_pref;
		accept;
	}
	reject;
}

function upstream_default_import_filter(int local_pref) {
	if net.len != 0 then {
		reject;
	}
#        honor_graceful_shutdown();
	if !is_self_net() then {
#		if ( bgp_path ~ [29632] ) then bgp_local_pref = local_pref - 25;			# NetAssist
#		else if ( bgp_path ~ [6939] ) then bgp_local_pref = local_pref - 15; 		# Hurriacne Electric
#		else if ( bgp_path ~ TRANSIT_ASNS ) then bgp_local_pref = local_pref - 10;	# Tier1
#		else bgp_local_pref = local_pref;
		accept;
	}
	reject;
}

function ris_import_filter() {
	reject;
}

function upstream_export_filter(int prepends) {
        reject_bogon_asns();
        reject_bogon_prefixes();
        reject_long_aspaths();
        reject_small_prefixes();
        reject_default_route();
	if is_self_net() then {
		if prepends >= 1 then bgp_path.prepend(OWNAS);
		if prepends >= 2 then bgp_path.prepend(OWNAS);
		if prepends >= 3 then bgp_path.prepend(OWNAS);
#		accept;
		reject;
	}
	reject;
}

function downstream_export_filter(int prepends) {
        reject_bogon_asns();
        reject_bogon_prefixes();
        reject_long_aspaths();
        reject_small_prefixes();
        reject_default_route();
	if prepends >= 1 then bgp_path.prepend(OWNAS);
	if prepends >= 2 then bgp_path.prepend(OWNAS);
	if prepends >= 3 then bgp_path.prepend(OWNAS);
	accept;
}

template bgp upstreams {
	local as OWNAS;
	path metric 1;
	import keep filtered;
	import where upstream_import_filter(100);
	export where upstream_export_filter(0);
	import limit 800000 action block;
}

template bgp upstream_default {
	local as OWNAS;
	path metric 1;
	import keep filtered;
	import where upstream_default_import_filter(100);
	export where upstream_export_filter(0);
	import limit 800000 action block;
}

template bgp peers {
	local as OWNAS;
	path metric 1;
	import keep filtered;
	import where upstream_import_filter(150);
	export where upstream_export_filter(0);
	import limit 10 action block;
}

template bgp ris {
	local OWNIP as OWNAS;
	path metric 1;
	import keep filtered;
	import where ris_import_filter();
	export where downstream_export_filter(0);
	import limit 10 action block;
	multihop;
}

protocol bgp securebit
{
    local as OWNAS;
    source address OWNIP;
    import all;
    graceful restart on;
    multihop 2;
    neighbor 194.50.94.250 as 58057;
}

include "./peers/*";
